<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CgAAAABJRU5ErkJggg==
</value>
  </data>
</root>